v0.7.2
    Renamed Rails and Rack configuration commands:
        lw_disable_request_logging ==> donot_log_requests
        lw_log_request_headers     ==> log_headers
        lw_enable_dev_logging      ==> log_in_development
        
    Renamed :headers field in web_log to :request_headers
        
v0.7.1
    lw-tail and lw-compute now receive an optional app parameter, for the cases where you want to call command-line tools from a directory other than the app's directory... or when you have more than one Heroku remote/app from the same directory

v0.7.0
    Eliminated long logs. Instead, there's now a parameter (log_request_headers in Rack, lw_log_request_headers in Rails) to add
       request and response headers to the web_log. 
    Cleaned up fields in the web_log table

    Added option to turn off automatic logging of requests (disable_request_logging in Rack, lw_disable_request_logging in Rails)
    Added option to turn on logging even if in development mode (enable_dev_logging in Rack, lw_enable_dev_logging in Rails)

    Honor filter_parameter_logging switch when used with Rails

    Cleaned up log and flush
    Cleaned up display of elapsed time for flush
    Cleaned up call from Rack and Rails, and enforce timeout (1 sec by default)
    Added unit tests
    
v0.6.2
    Added list_tables command
    
v0.6.1
    Added a bit of documentation

v0.6.0 
    Add support for querying API: lw_query
    
v0.5.6
    log HEROKU_QUEUE as an integer value
    
v0.5.5
    Added default logging of HEROKU_QUEUE   

v0.5.4
    Removed obsolete lw-heroku application
    
v0.5.3
    Show nicer error message with tail and compute if the app is not properly configured.

v0.5.2
    Fixes minor issues with in Rails logging

v0.5.1
    Fixes minor issues with logging statements sent to console
    
v0.5.0
    Supports new base logworm gem, which can work as a Heroku addon
    Configuration parameters now stored as URL
    No error if logworm cannot be properly configured -- lw_log simply ignored
    No logging in development mode
    
v0.4.1
    Show in console time spent communicating with the server.
    
v0.4.0 Added support for running on Rails!
    To use, add config.gem ‘logworm_client’ to environment.rb
    Then you can configure in ApplicationController, via logs_requests [:short | :long]+
    Works from views, models, or controllers.
    
v0.3.2 added lw_log method --fixed small issue

v0.3.1 added lw_log method

v0.3.0 ensure gem and dependencies live in gemcutter

v0.2.0 log short requests by default in the rack

v0.1.1 minor changes

v0.1.0 initial version.